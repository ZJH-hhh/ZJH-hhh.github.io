<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django_server</title>
      <link href="/2022/09/29/Django-server/"/>
      <url>/2022/09/29/Django-server/</url>
      
        <content type="html"><![CDATA[<h1 id="配置Docker-git环境与项目创建"><a href="#配置Docker-git环境与项目创建" class="headerlink" title="配置Docker,git环境与项目创建"></a>配置Docker,git环境与项目创建</h1><h2 id="Docker教程"><a href="#Docker教程" class="headerlink" title="Docker教程"></a><a href="https://www.acwing.com/blog/content/10878/">Docker教程</a></h2><h2 id="配置Docker环境"><a href="#配置Docker环境" class="headerlink" title="配置Docker环境"></a>配置Docker环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 先将django镜像传到自己租的云服务器上：</span><br><span class="line">scp django_lesson_1_0.tar cloudtencent:</span><br><span class="line"></span><br><span class="line"># 登录到自己的服务器：</span><br><span class="line">ssh cloudtencent</span><br><span class="line"></span><br><span class="line"># 将镜像从本地加载出来</span><br><span class="line">docker load -i django_lesson_1_0.tar</span><br><span class="line"></span><br><span class="line"># 用该镜像创建并启动一个容器django_server</span><br><span class="line"># 同时将该容器的端口22（ssh登录端口）和8000（Django调试端口）</span><br><span class="line"># 分别映射到云服务器的20000和8000断口（需要手动去云平台开启这两个端口）</span><br><span class="line">docker run -p 20000:22 -p 8000:8000 -- name django_server(容器名称) -itd django_lesson:1.0(镜像名称：版本)</span><br><span class="line"></span><br><span class="line"># 进入容器</span><br><span class="line">docker attach django_server</span><br><span class="line"></span><br><span class="line"># 创建用户并赋予sudo权限</span><br><span class="line">adduser zjh(用户名)</span><br><span class="line">usermod -aG sudo zjh</span><br><span class="line"></span><br><span class="line"># 回到终端配置免密登录</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"># 将祖传配置文件传到django_server</span><br><span class="line">scp .bashrc .vimrc .tmux.conf django_server</span><br></pre></td></tr></table></figure><p>使用django-admin startproject创建django项目<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject app</span><br></pre></td></tr></table></figure></p><h2 id="配置git环境"><a href="#配置git环境" class="headerlink" title="配置git环境"></a>配置git环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 生成密钥</span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line"># 查看公钥并复制到git平台的ssh密钥中，例如GitHub，或git.acwing</span><br><span class="line">cat .ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"># 对应远程仓库即可</span><br><span class="line">git config --global user.name &quot;colopen&quot;</span><br><span class="line">git config --global user.email &quot;zhaoxiucong@126.com&quot;</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin git@github.com:ZJH-hhh/django.git</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h2 id="配置django项目"><a href="#配置django项目" class="headerlink" title="配置django项目"></a>配置django项目</h2><h3 id="启动django项目"><a href="#启动django项目" class="headerlink" title="启动django项目"></a>启动django项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure><p>浏览器登入<code>ip:socket</code>后,会看到提示：(ip为云服务器发放的公网IP， socket为端口号)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid HTTP_HOST header: &#x27;120.48.18.165:8000&#x27;. You may need to add &#x27;120.48.18.165&#x27; to ALLOWED_HOSTS.</span><br></pre></td></tr></table></figure><br>将<code>120.48.18.165</code>写入<code>ALLOWED_HOSTS</code>即可<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 找到ALLOWED_HOSTS字段在哪个文件</span><br><span class="line">$ ag ALLOWED_HOSTS</span><br><span class="line"></span><br><span class="line">&gt; app/settings.py</span><br><span class="line">&gt; 28:ALLOWED_HOSTS = []</span><br><span class="line"></span><br><span class="line">$ vim app/settings.py</span><br><span class="line"></span><br><span class="line">*******</span><br><span class="line">ALLOWED_HOSTS = [&quot;120.48.18.165&quot;]</span><br><span class="line">*******</span><br><span class="line"></span><br><span class="line"># 保存后刷新浏览器页面即可</span><br></pre></td></tr></table></figure></p><h2 id="【-gitignore的作用】"><a href="#【-gitignore的作用】" class="headerlink" title="【.gitignore的作用】"></a>【.gitignore的作用】</h2><p>考虑到把当前项目提交到git服务器<br>执行<code>git status</code>后，会提示我们把<code>__pycache__</code>也提交</p><blockquote><p>工程常识：缓存文件，可执行文件，编译文件不用上传到<code>git</code>项目</p></blockquote><p>为了不让<code>git</code>每次去额外检测缓存的<code>__pycache__</code>文件，在git目录下vim一个<code>.gitinnore</code>文件，格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*/文件名</span><br><span class="line">*/__pycache__</span><br><span class="line"></span><br><span class="line">支持正则表达式，如</span><br><span class="line">*/*.swap</span><br></pre></td></tr></table></figure></p><p>保存后调用<code>git status</code>时就不会提示要<code>add</code>到缓存区了</p><h2 id="创建管理员登录页面"><a href="#创建管理员登录页面" class="headerlink" title="创建管理员登录页面"></a>创建管理员登录页面</h2><p>调用<code>django</code>封装好的函数即可<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py startapp game</span><br><span class="line"></span><br><span class="line">zjh@f9e4fffb40ad:~/app$ tree .</span><br><span class="line">.</span><br><span class="line">|-- README.md</span><br><span class="line">|-- app</span><br><span class="line">|   |-- __init__.py</span><br><span class="line">|   |-- __pycache__</span><br><span class="line">|   |   |-- __init__.cpython-38.pyc</span><br><span class="line">|   |   |-- settings.cpython-38.pyc</span><br><span class="line">|   |   |-- urls.cpython-38.pyc</span><br><span class="line">|   |   `-- wsgi.cpython-38.pyc</span><br><span class="line">|   |-- asgi.py</span><br><span class="line">|   |-- settings.py</span><br><span class="line">|   |-- urls.py</span><br><span class="line">|   `-- wsgi.py</span><br><span class="line">|-- db.sqlite3</span><br><span class="line">|-- game</span><br><span class="line">|   |-- __init__.py</span><br><span class="line">|   |-- __pycache__</span><br><span class="line">|   |   |-- __init__.cpython-38.pyc</span><br><span class="line">|   |   |-- urls.cpython-38.pyc</span><br><span class="line">|   |   `-- views.cpython-38.pyc</span><br><span class="line">|   |-- admin.py    # 管理员页面</span><br><span class="line">|   |-- apps.py</span><br><span class="line">|   |-- migrations</span><br><span class="line">|   |   `-- __init__.py</span><br><span class="line">|   |-- models.py   # 网站的数据结构，可以理解为数据库表</span><br><span class="line">|   |-- templates</span><br><span class="line">|   |-- tests.py</span><br><span class="line">|   |-- urls.py     # 路由</span><br><span class="line">|   `-- views.py    # 视图</span><br><span class="line">`-- manage.py</span><br></pre></td></tr></table></figure></p><p>运行服务器时，可能会有如下警告：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</span><br><span class="line">Run &#x27;python manage.py migrate&#x27; to apply them.</span><br></pre></td></tr></table></figure><br>意思是有18个数据库的修改没有<code>apply</code>，直接运行要求的命令即可</p><p>创建一个管理员用户<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py createsuperuser</span><br></pre></td></tr></table></figure><br>然后用输入的用户名和密码即可登录<code>admin</code>页面</p><h2 id="创建用户登录页面"><a href="#创建用户登录页面" class="headerlink" title="创建用户登录页面"></a>创建用户登录页面</h2><p><code>game</code>目录下的文件功能：</p><ul><li><code>templates</code>：管理<code>html</code>文件</li><li><code>urls</code>目录：管理路由，即链接和函数的对应关系</li><li><code>views</code>目录：管理<code>http</code>函数</li><li><code>models</code>目录：管理数据库数据</li></ul><p>现在要实现一个路由重定向：<br><code>url</code>输入网址 -&gt; <code>app.urls</code> -&gt; <code>game.urls</code> -&gt; <code>game.views.index</code> -&gt; 展示页面</p><p><code>game.views</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from django.http import HttpResponse</span><br><span class="line"></span><br><span class="line">def index(request):</span><br><span class="line">    line1 = &#x27;&lt;h1 style=&quot;text-align: center&quot;&gt; 第一个网页 &lt;/h1&gt;&#x27;</span><br><span class="line">    return HttpResponse(line1)</span><br></pre></td></tr></table></figure></p><p><code>game.urls</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from django.urls import path</span><br><span class="line">from game.views import index</span><br><span class="line"></span><br><span class="line">urlpatterns = [ </span><br><span class="line">    path(&quot;&quot;, index, name=&quot;index&quot;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p><code>app.urls</code><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line">from django.urls import path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [ </span><br><span class="line">    path(&#x27;&#x27;, include(&#x27;game.urls&#x27;)),</span><br><span class="line">    path(&#x27;admin/&#x27;, admin.site.urls),</span><br><span class="line">] </span><br></pre></td></tr></table></figure></p><p>然后打开<code>ip:socket</code>可以显示<code>index</code>返回的网页</p><p>参考文献: <a href="https://www.colopen-blog.com/Engineer/acw_django/">源自这里</a></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修剪草坪</title>
      <link href="/2022/09/25/My-First-Post/"/>
      <url>/2022/09/25/My-First-Post/</url>
      
        <content type="html"><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a><a href="https://www.acwing.com/problem/content/description/1089/">原题链接</a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个长度为n的数组a和一个整数m，a[i]表示i点的价值，从a中选择一些元素：</p></blockquote><ul><li>不能选择连续m个元素</li><li>使得总价值最大</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>令<code>f[i]</code>表示以<code>i</code>为右端点的前缀区间的最大价值<br>状态转移：<br>考虑第i个物品选或不选</p><ul><li>不选：<script type="math/tex; mode=display">f_i=f_{i-1}</script></li><li>选：<script type="math/tex; mode=display">f_i=f_{i-j-1}+s_i-s_{i-j}\quad(j是以i为右端点的连续选择的区间长度，0\leq j\leq m)</script>整理得：$f<em>i=s_i+max\{f</em>{j-1}-s_j\}\quad 0\leq i-j\leq m$</li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">ll s[N], f[N];</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回</span></span><br><span class="line"><span class="function">ll <span class="title">g</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[std::<span class="built_in">max</span>(<span class="number">0</span>, i - <span class="number">1</span>)] - s[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) std::cin &gt;&gt; s[i], s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line">    q[ ++ tt] = f[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (hh &lt;= tt &amp;&amp; i - q[hh] &gt; m) hh ++ ;</span><br><span class="line">        f[i] = std::<span class="built_in">max</span>(f[i - <span class="number">1</span>], <span class="built_in">g</span>(q[hh]) + s[i]);</span><br><span class="line">        <span class="keyword">while</span> (hh &lt;= tt &amp;&amp; <span class="built_in">g</span>(q[tt]) &lt;= <span class="built_in">g</span>(i)) tt -- ;</span><br><span class="line">        q[ ++ tt] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    std::cout &lt;&lt; f[n] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="另一种思路"><a href="#另一种思路" class="headerlink" title="另一种思路"></a>另一种思路</h2><p>考虑转化，最多连续选择k个等价于任意长度为k+1的区间至少有一个不选</p><ul><li>f[i]表示以i为右端点的前缀区间且不选i的最小损失效率</li></ul><p>则总效率减去最小损失效率就是最大可以获得的效率</p><h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line"></span><br><span class="line">using ll = long long;</span><br><span class="line"></span><br><span class="line">constexpr int N = 1e5 + 5;</span><br><span class="line"></span><br><span class="line">int n, m;</span><br><span class="line">int a[N], q[N];</span><br><span class="line">ll f[N];</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    std::cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    ll sum = 0;</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) std::cin &gt;&gt; a[i], sum += a[i];</span><br><span class="line">    </span><br><span class="line">    int hh = 0, tt = -1;</span><br><span class="line">    q[ ++ tt] = f[0];</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) &#123;</span><br><span class="line">        if (hh &lt;= tt &amp;&amp; q[hh] &lt; i - m - 1) hh ++ ;</span><br><span class="line">        f[i] = f[q[hh]] + a[i];</span><br><span class="line">        while (hh &lt;= tt &amp;&amp; f[q[tt]] &gt;= f[i]) tt -- ;</span><br><span class="line">        q[ ++ tt] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (q[hh] &lt; n - m) hh ++ ;</span><br><span class="line">    std::cout &lt;&lt; sum - f[q[hh]] &lt;&lt; &#x27;\n&#x27;;</span><br><span class="line">    </span><br><span class="line">    return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
