<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修剪草坪</title>
      <link href="/2022/09/25/My-First-Post/"/>
      <url>/2022/09/25/My-First-Post/</url>
      
        <content type="html"><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a><a href="https://www.acwing.com/problem/content/description/1089/">原题链接</a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个长度为n的数组a和一个整数m，a[i]表示i点的价值，从a中选择一些元素：</p></blockquote><ul><li>不能选择连续m个元素</li><li>使得总价值最大</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>令<code>f[i]</code>表示以<code>i</code>为右端点的前缀区间的最大价值<br>状态转移：<br>考虑第i个物品选或不选</p><ul><li>不选：<script type="math/tex; mode=display">f_i=f_{i-1}</script></li><li>选：<script type="math/tex; mode=display">f_i=f_{i-j-1}+s_i-s_{i-j}\quad(j是以i为右端点的连续选择的区间长度，0\leq j\leq m)</script>整理得：$f_i=s_i+max\\{f_{j-1}-s_j\\}\quad 0\leq i-j\leq m$</li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line"></span><br><span class="line">using ll = long long;</span><br><span class="line"></span><br><span class="line">constexpr int N = 1e5 + 5;</span><br><span class="line"></span><br><span class="line">int n, m;</span><br><span class="line">ll s[N], f[N];</span><br><span class="line">int q[N];</span><br><span class="line"></span><br><span class="line">// 返回</span><br><span class="line">ll g(int i) &#123;</span><br><span class="line">    return f[std::max(0, i - 1)] - s[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    std::cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) std::cin &gt;&gt; s[i], s[i] += s[i - 1];</span><br><span class="line">    </span><br><span class="line">    int hh = 0, tt = -1;</span><br><span class="line">    q[ ++ tt] = f[0];</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) &#123;</span><br><span class="line">        if (hh &lt;= tt &amp;&amp; i - q[hh] &gt; m) hh ++ ;</span><br><span class="line">        f[i] = std::max(f[i - 1], g(q[hh]) + s[i]);</span><br><span class="line">        while (hh &lt;= tt &amp;&amp; g(q[tt]) &lt;= g(i)) tt -- ;</span><br><span class="line">        q[ ++ tt] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    std::cout &lt;&lt; f[n] &lt;&lt; &#x27;\n&#x27;;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="另一种思路"><a href="#另一种思路" class="headerlink" title="另一种思路"></a>另一种思路</h2><p>考虑转化，最多连续选择k个等价于任意长度为k+1的区间至少有一个不选</p><ul><li>f[i]表示以i为右端点的前缀区间且不选i的最小损失效率</li></ul><p>则总效率减去最小损失效率就是最大可以获得的效率</p><h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line"></span><br><span class="line">using ll = long long;</span><br><span class="line"></span><br><span class="line">constexpr int N = 1e5 + 5;</span><br><span class="line"></span><br><span class="line">int n, m;</span><br><span class="line">int a[N], q[N];</span><br><span class="line">ll f[N];</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    std::cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    ll sum = 0;</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) std::cin &gt;&gt; a[i], sum += a[i];</span><br><span class="line">    </span><br><span class="line">    int hh = 0, tt = -1;</span><br><span class="line">    q[ ++ tt] = f[0];</span><br><span class="line">    for (int i = 1; i &lt;= n; i ++ ) &#123;</span><br><span class="line">        if (hh &lt;= tt &amp;&amp; q[hh] &lt; i - m - 1) hh ++ ;</span><br><span class="line">        f[i] = f[q[hh]] + a[i];</span><br><span class="line">        while (hh &lt;= tt &amp;&amp; f[q[tt]] &gt;= f[i]) tt -- ;</span><br><span class="line">        q[ ++ tt] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (q[hh] &lt; n - m) hh ++ ;</span><br><span class="line">    std::cout &lt;&lt; sum - f[q[hh]] &lt;&lt; &#x27;\n&#x27;;</span><br><span class="line">    </span><br><span class="line">    return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/24/hello-world/"/>
      <url>/2022/09/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
