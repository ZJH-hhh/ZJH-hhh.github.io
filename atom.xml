<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to ZJH-blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-29T10:27:30.075Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>今天吃什么</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django_server</title>
    <link href="http://example.com/2022/09/29/Django-server/"/>
    <id>http://example.com/2022/09/29/Django-server/</id>
    <published>2022-09-29T09:40:46.000Z</published>
    <updated>2022-09-29T10:27:30.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置Docker-git环境与项目创建"><a href="#配置Docker-git环境与项目创建" class="headerlink" title="配置Docker,git环境与项目创建"></a>配置Docker,git环境与项目创建</h1><h2 id="Docker教程"><a href="#Docker教程" class="headerlink" title="Docker教程"></a><a href="https://www.acwing.com/blog/content/10878/">Docker教程</a></h2><h2 id="配置Docker环境"><a href="#配置Docker环境" class="headerlink" title="配置Docker环境"></a>配置Docker环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># 先将django镜像传到自己租的云服务器上：<br>scp django_lesson_1_0.tar cloudtencent:<br><br># 登录到自己的服务器：<br>ssh cloudtencent<br><br># 将镜像从本地加载出来<br>docker load -i django_lesson_1_0.tar<br><br># 用该镜像创建并启动一个容器django_server<br># 同时将该容器的端口22（ssh登录端口）和8000（Django调试端口）<br># 分别映射到云服务器的20000和8000断口（需要手动去云平台开启这两个端口）<br>docker run -p 20000:22 -p 8000:8000 -- name django_server(容器名称) -itd django_lesson:1.0(镜像名称：版本)<br><br># 进入容器<br>docker attach django_server<br><br># 创建用户并赋予sudo权限<br>adduser zjh(用户名)<br>usermod -aG sudo zjh<br><br># 回到终端配置免密登录<br>......<br><br># 将祖传配置文件传到django_server<br>scp .bashrc .vimrc .tmux.conf django_server<br></code></pre></td></tr></table></figure><p>使用django-admin startproject创建django项目<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">django-admin startproject app<br></code></pre></td></tr></table></figure></p><h2 id="配置git环境"><a href="#配置git环境" class="headerlink" title="配置git环境"></a>配置git环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># 生成密钥<br>ssh-keygen<br><br># 查看公钥并复制到git平台的ssh密钥中，例如GitHub，或git.acwing<br>cat .ssh/id_rsa.pub<br><br># 对应远程仓库即可<br>git config --global user.name &quot;colopen&quot;<br>git config --global user.email &quot;zhaoxiucong@126.com&quot;<br><br>git init<br>git add .<br>git commit -m &quot;first commit&quot;<br>git remote add origin git@github.com:ZJH-hhh/django.git<br>git push<br></code></pre></td></tr></table></figure><h2 id="配置django项目"><a href="#配置django项目" class="headerlink" title="配置django项目"></a>配置django项目</h2><h3 id="启动django项目"><a href="#启动django项目" class="headerlink" title="启动django项目"></a>启动django项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">python3 manage.py runserver 0.0.0.0:8000<br></code></pre></td></tr></table></figure><p>浏览器登入<code>ip:socket</code>后,会看到提示：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">Invalid HTTP_HOST header: &#x27;120.48.18.165:8000&#x27;. You may need to add &#x27;120.48.18.165&#x27; to ALLOWED_HOSTS.<br></code></pre></td></tr></table></figure><br>将<code>120.48.18.165</code>写入<code>ALLOWED_HOSTS</code>即可<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># 找到ALLOWED_HOSTS字段在哪个文件<br>$ ag ALLOWED_HOSTS<br><br>&gt; app/settings.py<br>&gt; 28:ALLOWED_HOSTS = []<br><br>$ vim app/settings.py<br><br>*******<br>ALLOWED_HOSTS = [&quot;120.48.18.165&quot;]<br>*******<br><br># 保存后刷新浏览器页面即可<br></code></pre></td></tr></table></figure></p><p>参考文献: <a href="https://www.colopen-blog.com/Engineer/acw_django/">源自这里</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置Docker-git环境与项目创建&quot;&gt;&lt;a href=&quot;#配置Docker-git环境与项目创建&quot; class=&quot;headerlink&quot; title=&quot;配置Docker,git环境与项目创建&quot;&gt;&lt;/a&gt;配置Docker,git环境与项目创建&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="Django" scheme="http://example.com/categories/Django/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>修剪草坪</title>
    <link href="http://example.com/2022/09/25/My-First-Post/"/>
    <id>http://example.com/2022/09/25/My-First-Post/</id>
    <published>2022-09-25T02:50:32.000Z</published>
    <updated>2022-09-27T11:20:18.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a><a href="https://www.acwing.com/problem/content/description/1089/">原题链接</a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个长度为n的数组a和一个整数m，a[i]表示i点的价值，从a中选择一些元素：</p></blockquote><ul><li>不能选择连续m个元素</li><li>使得总价值最大</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>令<code>f[i]</code>表示以<code>i</code>为右端点的前缀区间的最大价值<br>状态转移：<br>考虑第i个物品选或不选</p><ul><li>不选：<script type="math/tex; mode=display">f_i=f_{i-1}</script></li><li>选：<script type="math/tex; mode=display">f_i=f_{i-j-1}+s_i-s_{i-j}\quad(j是以i为右端点的连续选择的区间长度，0\leq j\leq m)</script>整理得：$f_i=s_i+max\\{f_{j-1}-s_j\\}\quad 0\leq i-j\leq m$</li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#include &lt;iostream&gt;<br>#include &lt;cstring&gt;<br><br>using ll = long long;<br><br>constexpr int N = 1e5 + 5;<br><br>int n, m;<br>ll s[N], f[N];<br>int q[N];<br><br>// 返回<br>ll g(int i) &#123;<br>    return f[std::max(0, i - 1)] - s[i];<br>&#125;<br><br>int main() &#123;<br>    std::cin &gt;&gt; n &gt;&gt; m;<br>    for (int i = 1; i &lt;= n; i ++ ) std::cin &gt;&gt; s[i], s[i] += s[i - 1];<br>    <br>    int hh = 0, tt = -1;<br>    q[ ++ tt] = f[0];<br>    for (int i = 1; i &lt;= n; i ++ ) &#123;<br>        if (hh &lt;= tt &amp;&amp; i - q[hh] &gt; m) hh ++ ;<br>        f[i] = std::max(f[i - 1], g(q[hh]) + s[i]);<br>        while (hh &lt;= tt &amp;&amp; g(q[tt]) &lt;= g(i)) tt -- ;<br>        q[ ++ tt] = i;<br>    &#125;<br>    <br>    std::cout &lt;&lt; f[n] &lt;&lt; &#x27;\n&#x27;;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="另一种思路"><a href="#另一种思路" class="headerlink" title="另一种思路"></a>另一种思路</h2><p>考虑转化，最多连续选择k个等价于任意长度为k+1的区间至少有一个不选</p><ul><li>f[i]表示以i为右端点的前缀区间且不选i的最小损失效率</li></ul><p>则总效率减去最小损失效率就是最大可以获得的效率</p><h2 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#include &lt;iostream&gt;<br>#include &lt;cstring&gt;<br><br>using ll = long long;<br><br>constexpr int N = 1e5 + 5;<br><br>int n, m;<br>int a[N], q[N];<br>ll f[N];<br><br>int main() &#123;<br>    std::cin &gt;&gt; n &gt;&gt; m;<br>    ll sum = 0;<br>    for (int i = 1; i &lt;= n; i ++ ) std::cin &gt;&gt; a[i], sum += a[i];<br>    <br>    int hh = 0, tt = -1;<br>    q[ ++ tt] = f[0];<br>    for (int i = 1; i &lt;= n; i ++ ) &#123;<br>        if (hh &lt;= tt &amp;&amp; q[hh] &lt; i - m - 1) hh ++ ;<br>        f[i] = f[q[hh]] + a[i];<br>        while (hh &lt;= tt &amp;&amp; f[q[tt]] &gt;= f[i]) tt -- ;<br>        q[ ++ tt] = i;<br>    &#125;<br>    <br>    if (q[hh] &lt; n - m) hh ++ ;<br>    std::cout &lt;&lt; sum - f[q[hh]] &lt;&lt; &#x27;\n&#x27;;<br>    <br>    return 0; <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;原题链接&quot;&gt;&lt;a href=&quot;#原题链接&quot; class=&quot;headerlink&quot; title=&quot;原题链接&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/1089/&quot;&gt;原题链接&lt;/a</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="DP" scheme="http://example.com/tags/DP/"/>
    
  </entry>
  
</feed>
